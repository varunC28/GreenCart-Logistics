generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Manager {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Driver {
  id                Int       @id @default(autoincrement())
  name              String
  currentShiftHours Int       @default(0)
  past7DayHours     Int[]     @default([])
  lastWorkDate      DateTime?
  assignments       Assignment[]
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Route {
  id               Int      @id @default(autoincrement())
  routeId          String   @unique
  distanceKm       Float
  trafficLevel     String
  baseTimeMinutes  Int
  orders           Order[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Order {
  assignments      Assignment[]
  id                Int       @id @default(autoincrement())
  orderId           String    @unique
  valueRs           Int
  assignedRouteId   Int?
  assignedRoute     Route?    @relation(fields: [assignedRouteId], references: [id])
  deliveryTimestamp DateTime?
  status            String    @default("pending")
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model SimulationResult {
  id          Int          @id @default(autoincrement())
  startedAt   DateTime     @default(now())
  inputs      Json
  metrics     Json
  assignments Assignment[]
  createdAt   DateTime     @default(now())
}

model Assignment {
  id               Int               @id @default(autoincrement())
  simulationId     Int
  simulation       SimulationResult  @relation(fields: [simulationId], references: [id])
  orderId          Int
  order            Order             @relation(fields: [orderId], references: [id])
  driverId         Int
  driver           Driver            @relation(fields: [driverId], references: [id])
  onTime           Boolean
  fuelCost         Int
  penalty          Int
  bonus            Int
  profit           Int
  deliveryMinutes  Int
}
